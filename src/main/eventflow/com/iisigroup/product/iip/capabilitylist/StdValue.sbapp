<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="10.4.3_a45545bc0fa864b6dd457e084eb653f6e2004e05">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.iisigroup.product.iip.capabilitylist.StdValue"/>
        </type-metadata>
        <memory-model-settings/>
        <parameter-definitions>
            <parameter default="999" name="tupleWindow"/>
            <parameter default="999" name="timeWindow"/>
            <parameter default="SrcID" name="SrcID"/>
            <parameter default="SnsrType" name="SnsrType"/>
            <parameter default="Std" name="CapType"/>
            <parameter default="192.168.61.14:9092" name="Broker"/>
            <parameter default="192.168.61.14:2181" name="Zookeeper"/>
        </parameter-definitions>
        <dynamic-variables/>
        <data name="ModuleTable" shared="true" source="concrete" type="querytable">
            <param name="storage-method" value="heap"/>
            <param name="replicated" value="false"/>
            <table-schema>
                <schema>
                    <field name="UUID" type="string"/>
                    <field name="SrcID" type="string"/>
                    <field name="SnsrType" type="string"/>
                    <field name="SnsrID" type="string"/>
                    <field name="CapType" type="string"/>
                    <field name="Rule" type="string"/>
                    <field name="MsgType" type="string"/>
                    <field name="FEXGroupID" type="string"/>
                    <field name="Interval" type="int"/>
                    <field name="Describe" type="string"/>
                    <field name="Enable" type="string"/>
                </schema>
                <primary-index type="btree">
                    <field name="SrcID"/>
                    <field name="SnsrType"/>
                    <field name="SnsrID"/>
                    <field name="Rule"/>
                </primary-index>
            </table-schema>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="empty"/>
        </data>
        <stream name="DataIn">
            <schema>
                <field name="SrcID" type="string"/>
                <field name="SnsrType" type="string"/>
                <field name="SnsrID" type="string"/>
                <field name="data" type="string"/>
                <field name="time" type="string"/>
                <field name="unhandledData" type="capture" type-name="unhandledDataType"/>
            </schema>
        </stream>
        <stream name="ReloadCapCom">
            <schema>
                <field name="reloadCommand" type="capture" type-name="fieldType"/>
            </schema>
        </stream>
        <box name="FirstStart" type="inputadapter">
            <output port="1" stream="out:FirstStart_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="Map" type="map">
            <input port="1" stream="DataIn"/>
            <output port="1" stream="out:Map_1"/>
            <target-list>
                <item name="input" selection="all">
                    <replace field="data">double(data)</replace>
                    <remove field="time"/>
                </item>
                <expressions>
                    <include field="time">parse_time(time,"yyyy/MM/dd hh:mm:ss")</include>
                </expressions>
            </target-list>
        </box>
        <box name="Union2" type="union">
            <input port="1" stream="out:FirstStart_1"/>
            <input port="2" stream="ReloadCapCom"/>
            <output port="1" stream="out:Union2_1"/>
            <param name="strict" value="false"/>
        </box>
        <module-reference name="abnormalCheck">
            <input name="CapabilityIn" port="1" stream="out:Union2_1"/>
            <output name="RuleOut" port="1" stream="OutputStream"/>
            <param name="file" value="com.iisigroup.iip.utility.AbnormalCheck"/>
            <input-dataref name="QueryTable" table="ModuleTable"/>
            <table-export name="QueryTable"/>
            <parameter-bindings>
                <binding name="SrcID" value="${SrcID}"/>
                <binding name="SnsrType" value="${SnsrType}"/>
                <binding name="CapType" value="${CapType}"/>
            </parameter-bindings>
        </module-reference>
        <box name="Filter" type="filter">
            <input port="1" stream="out:Map_1"/>
            <output port="1" stream="out:Filter_1"/>
            <output port="2" stream="out:Filter_2"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="&quot;${tupleWindow}&quot;!=&quot;999&quot;"/>
            <param name="expression.1" value="&quot;${timeWindow}&quot;!=&quot;999&quot;"/>
        </box>
        <output-stream name="OutputStream"/>
        <box name="timeAgg" type="aggregate">
            <input port="1" stream="out:Filter_2"/>
            <output port="1" stream="out:timeAgg_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Tuple"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-size.0" value="${tupleWindow}"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="stdValue">stdev(data)</include>
                </expressions>
            </target-list>
            <param name="group-by-name.0" value="SrcID"/>
            <param name="group-by.0" value="SrcID"/>
            <param name="group-by-name.1" value="SnsrType"/>
            <param name="group-by.1" value="SnsrType"/>
            <param name="group-by-name.2" value="SnsrID"/>
            <param name="group-by.2" value="SnsrID"/>
        </box>
        <box name="tupleAgg" type="aggregate">
            <input port="1" stream="out:Filter_1"/>
            <output port="1" stream="out:tupleAgg_1"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Tuple"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-size.0" value="${tupleWindow}"/>
            <param name="dimension-emit-close-first.0" value="false"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="stdValue">stdev(data)</include>
                </expressions>
            </target-list>
            <param name="group-by-name.0" value="SrcID"/>
            <param name="group-by.0" value="SrcID"/>
            <param name="group-by-name.1" value="SnsrType"/>
            <param name="group-by.1" value="SnsrType"/>
            <param name="group-by-name.2" value="SnsrID"/>
            <param name="group-by.2" value="SnsrID"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:tupleAgg_1"/>
            <input port="2" stream="out:timeAgg_1"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="Split" type="split">
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="StdValueOut"/>
            <output port="2" stream="out:Split_2"/>
            <param name="output-count" value="2"/>
        </box>
        <output-stream name="StdValueOut"/>
        <box name="ruleCheck" type="query">
            <input port="1" stream="out:Split_2"/>
            <output port="1" stream="out:ruleCheck_1"/>
            <dataref id="querytable" name="abnormalCheck.QueryTable"/>
            <param name="operation" value="read"/>
            <param name="where" value="expression"/>
            <param name="limit" value="1"/>
            <param name="where-expression" value="current.SrcID=input1.SrcID and current.SnsrType=input1.SnsrType and (current.SnsrID=input1.SnsrID or current.SnsrID='*')"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-nothing"/>
            <param name="order-by-direction" value="descending"/>
            <param name="order-by-key-field.0" value="SnsrID"/>
            <param name="order-by-key-field.1" value="Rule"/>
            <target-list>
                <item name="input" selection="all"/>
                <item name="current" selection="all">
                    <remove field="SrcID"/>
                    <remove field="SnsrType"/>
                    <remove field="SnsrID"/>
                </item>
                <item name="old" selection="none"/>
                <item name="new" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="Filter2" type="filter">
            <input port="1" stream="out:ruleCheck_1"/>
            <output port="1" stream="out:Filter2_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="eval(Rule,input1,bool())"/>
        </box>
        <module-reference name="abnormalCountRef1">
            <input name="dataIn" port="1" stream="out:Filter2_1"/>
            <output name="OutputStream" port="1" stream="out:abnormalCountRef1_1"/>
            <param name="file" value="com.iisigroup.product.iip.capabilitylist.AbnormalCount"/>
            <parameter-bindings>
                <binding name="countThreshold" value="3"/>
                <binding name="Broker" value="${Broker}"/>
                <binding name="Zookeeper" value="${Zookeeper}"/>
            </parameter-bindings>
        </module-reference>
    </add>
</modify>
